// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VHZ_App.Models;

#nullable disable

namespace VHZ_App.Migrations
{
    [DbContext(typeof(VhzContext))]
    [Migration("20250621184532_FixBankCardNumberLength")]
    partial class FixBankCardNumberLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VHZ_App.Models.BankCard", b =>
                {
                    b.Property<int>("IdBankCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_bank_card");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBankCard"));

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("card_number")
                        .IsFixedLength();

                    b.Property<string>("CvvCvc")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("cvv_cvc")
                        .IsFixedLength();

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("ValidityPeriod")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("validity_period")
                        .IsFixedLength();

                    b.HasKey("IdBankCard");

                    b.HasIndex(new[] { "IdUser" }, "IX_Bank_card_id_user");

                    b.ToTable("Bank_card", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.Cart", b =>
                {
                    b.Property<int>("IdCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cart");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCart"));

                    b.Property<int>("AmountProducts")
                        .HasColumnType("int")
                        .HasColumnName("amount_products");

                    b.Property<int?>("IdOrder")
                        .HasColumnType("int")
                        .HasColumnName("id_order");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    b.HasKey("IdCart");

                    b.HasIndex(new[] { "IdOrder" }, "IX_Cart_id_order");

                    b.HasIndex(new[] { "IdProduct" }, "IX_Cart_id_product");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.Contact", b =>
                {
                    b.Property<int>("IdContact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contact");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContact"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("NameContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_contact");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("number_phone")
                        .IsFixedLength();

                    b.HasKey("IdContact");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.Information", b =>
                {
                    b.Property<int>("IdInformation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_information");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInformation"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("section_name");

                    b.HasKey("IdInformation");

                    b.ToTable("Information");
                });

            modelBuilder.Entity("VHZ_App.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_order");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"));

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<string>("DeliveryMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("delivery_method");

                    b.Property<string>("House")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("house");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Locality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("locality");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("street");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money")
                        .HasColumnName("total_price");

                    b.HasKey("IdOrder");

                    b.HasIndex(new[] { "IdUser" }, "IX_Order_id_user");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("VHZ_App.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Appointment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("appointment");

                    b.Property<string>("DescriptionProduct")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description_product");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("image");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name_product");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<string>("ProductCompliance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_compliance");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("type");

                    b.HasKey("IdProduct");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.TechnicalSpecification", b =>
                {
                    b.Property<int>("IdTechnicalSpecifications")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_technical_specifications");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTechnicalSpecifications"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    b.Property<string>("NameIndicator")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name_indicator");

                    b.Property<string>("Standard")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("standard");

                    b.HasKey("IdTechnicalSpecifications");

                    b.HasIndex(new[] { "IdProduct" }, "IX_Technical_specifications_id_product");

                    b.ToTable("Technical_specifications", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nchar(11)")
                        .HasColumnName("contact_number")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("inn")
                        .IsFixedLength();

                    b.Property<string>("Kpp")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .HasColumnName("kpp")
                        .IsFixedLength();

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("NameCompany")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name_company");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("Pathronimic")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pathronimic");

                    b.Property<string>("Post")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("post");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("surname");

                    b.HasKey("IdUser");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("VHZ_App.Models.BankCard", b =>
                {
                    b.HasOne("VHZ_App.Models.User", "IdUserNavigation")
                        .WithMany("BankCards")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Bank_card_User");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("VHZ_App.Models.Cart", b =>
                {
                    b.HasOne("VHZ_App.Models.Order", "IdOrderNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdOrder")
                        .HasConstraintName("FK_Cart_Order");

                    b.HasOne("VHZ_App.Models.Product", "IdProductNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("FK_Cart_Product");

                    b.Navigation("IdOrderNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("VHZ_App.Models.Order", b =>
                {
                    b.HasOne("VHZ_App.Models.User", "IdUserNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("VHZ_App.Models.TechnicalSpecification", b =>
                {
                    b.HasOne("VHZ_App.Models.Product", "IdProductNavigation")
                        .WithMany("TechnicalSpecifications")
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("FK_Technical_specifications_Product");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("VHZ_App.Models.Order", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("VHZ_App.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("TechnicalSpecifications");
                });

            modelBuilder.Entity("VHZ_App.Models.User", b =>
                {
                    b.Navigation("BankCards");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
